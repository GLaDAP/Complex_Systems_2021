from mesa import Agent

"""
A tree has the following conditions:
- Fine: Not on fire, growing untill health is 100
- On Fire: If on fire, health is reducing untill 0. After that, the agent is removed.
"""


class Tree(Agent):
    """
    A tree cell.

    Attributes:
        x, y: Grid coordinates
        condition: Can be "Fine", "On Fire", or "Burned Out"
        unique_id: (x,y) tuple.

    unique_id isn't strictly necessary here, but it's good
    practice to give one to each agent anyway.
    """

    def __init__(self, pos, model, initial_hp):
        """
        Create a new tree.
        Args:
            unique_id (int): ID Generated by Mesa
            pos (tuple): The tree's coordinates on the grid.
            model (mesa.Model): standard model reference for agent.
        """
        super().__init__(pos, model)
        self.pos = pos
        self.health = initial_hp
        self.burn_grade = 0
        self.condition = "Fine"

    def step(self):
        """
        If the tree is on fire, spread it to fine trees nearby.
        """
        if self.condition == "On Fire":
            if self.burn_grade <= 0:
                # In case the fire is already extinguished
                self.condition = "Fine"
                self.burn_grade = 0
            # Tree is burning down 
            self.burn_grade += self.model.burn_speed
            if self.burn_grade > 100:
                # Tree burned down completely
                self.model.grid._remove_agent(self.pos, self)
                self.model.schedule.remove(self)
        else:
            # Tree is not on fire, so let it grow untill 100
            if self.health < 100:
                self.health += self.model.growth_rate
